plugins {
    id 'org.springframework.boot' version '2.1.3.RELEASE'
}

apply from: '../openpos-gradle/src/main/resources/java.gradle'
apply from: '../openpos-gradle/src/main/resources/openpos.gradle'
apply from: '../openpos-gradle/src/main/resources/spring.gradle'

dependencies {
    compile("com.github.ulisesbocchio:jasypt-spring-boot-starter:2.1.2")
    compile project(":openpos-util")
    compile("org.codehaus.groovy:groovy:$groovyVersion")
    compile("org.codehaus.groovy:groovy-jsr223:$groovyVersion")
    compile("org.codehaus.groovy:groovy-ant:$groovyVersion")
}
configurations {
    [apiElements, runtimeElements].each {
        it.outgoing.artifacts.removeIf {
            it.buildDependencies.getDependencies(null).contains(jar)
        }
        it.outgoing.artifact(bootJar)
    }
}

test {
    filter {
        includeTestsMatching 'org.jumpmind.pos.management.*'
    }
}

task apiJar(type: Jar) {
    classifier = "api"
//    archiveClassifier.set('api')
    from sourceSets.main.output
}

artifacts {
    // TODO: check with Chris if this needs changed
    archives sourcesJar, bootJar, apiJar
}

// To launch local:
// java -Dloader.path=./src/test/resources -Dspring.profiles.active=bltest -jar build/libs/openpos-management-server.jar
bootJar {
    mainClassName = 'org.jumpmind.pos.management.OpenposManagementServer'
    manifest {
        attributes 'Main-Class': 'org.springframework.boot.loader.PropertiesLauncher'
    }
    archiveClassifier = 'app'
}

task bootRunRetailer(type: org.springframework.boot.gradle.tasks.run.BootRun) {
    doFirst() {
        main = bootJar.mainClassName
        classpath = sourceSets.main.runtimeClasspath
        systemProperty 'spring.profiles.active', 'bltest'
    }

}

publishing {
  publications {
      mavenJava(MavenPublication){
          /* Spring boot jar, with 'app' classifier is handled by spring boot gradle plugin */

          artifact sourcesJar {
              classifier 'sources'
          }
          artifact apiJar {
              version project.version
              classifier 'api'
          }
      }
  }
}
